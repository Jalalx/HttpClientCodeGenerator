using HttpClientGenerator.Internals;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;
using System;
using System.Linq;
using System.Text;

namespace HttpClientGenerator
{
    [Generator]
    public class HttpClientCodeGenerator : ISourceGenerator
    {
        public void Execute(GeneratorExecutionContext context)
        {
            if (context.SyntaxContextReceiver is HttpClientCodeGeneratorSyntaxReceiver syntaxReceiver)
            {
                foreach (var partialServiceInfo in syntaxReceiver.HttpServiceInfos)
                {
                    foreach (var group in partialServiceInfo.Value.MarkedPartialMethods.GroupBy(f => f.PartialMethodSymbol.ContainingType))
                    {
                        var classSource = new PartialServiceClassSourceBuilder(group.Key, partialServiceInfo.Value, group.ToList(), syntaxReceiver.ImportedNamespaces);
                        var typeName = group.Key.ToDisplayString();
                        context.AddSource(GetAutoGeneratedFileName(typeName), SourceText.From(classSource.Generate(), Encoding.UTF8));
                    }
                }
            }
        }

        public void Initialize(GeneratorInitializationContext context)
        {
            context.RegisterForPostInitialization(InitializeDependencies);
            context.RegisterForSyntaxNotifications(() => new HttpClientCodeGeneratorSyntaxReceiver());
        }

        private void InitializeDependencies(GeneratorPostInitializationContext content)
        {
            foreach (var kvp in DependenciesManager.GetDependenciesSourceCode())
            {
                var generatorFileName = kvp.Key;
                if (kvp.Key.EndsWith(".cs"))
                {
                    generatorFileName = kvp.Key.Substring(kvp.Key.Length - 3);
                }

                content.AddSource($"{generatorFileName}.{Guid.NewGuid():N}.generated.cs", SourceText.From(kvp.Value, Encoding.UTF8));
            }
        }

        private static string GetAutoGeneratedFileName(string identifier) => $"HttpClientGenerator.{identifier}.generated.cs";

    }
}
